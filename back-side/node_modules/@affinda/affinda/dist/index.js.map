{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/parameters.ts","../src/models/mappers.ts","../src/affindaAPIContext.ts","../src/affindaAPI.ts","../src/affindaAPICredential.ts"],"sourcesContent":["import * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\n\nexport interface GetAllDocumentsResults {\n  /** Number of documents in result */\n  count?: number;\n  /** URL to request next page of results */\n  next?: string;\n  /** URL to request previous page of results */\n  previous?: string;\n  results?: Meta[];\n}\n\nexport interface Meta {\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier: string | null;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** If true, the document has finished processing. Particularly useful if an endpoint request specified wait=False, when polling use this variable to determine when to stop polling */\n  ready: boolean;\n  /** The datetime when the document was ready */\n  readyDt?: Date;\n  /** If true, some exception was raised during processing. Check the 'error' field of the main return object. */\n  failed: boolean;\n  /** The date/time in ISO-8601 format when the document will be automatically deleted.  Defaults to no expiry. */\n  expiryTime?: string;\n}\n\nexport interface RequestError {\n  detail: string;\n  statusCode: number;\n}\n\nexport interface Resume {\n  data: ResumeData | null;\n  meta: Meta;\n  error: ErrorModel;\n}\n\nexport interface ResumeData {\n  name?: ResumeDataName;\n  phoneNumbers?: string[];\n  websites?: string[];\n  emails?: string[];\n  dateOfBirth?: string;\n  location?: Location;\n  objective?: string;\n  languages?: string[];\n  summary?: string;\n  totalYearsExperience?: number;\n  /** base64 encoded string */\n  headShot?: Uint8Array;\n  education?: ResumeDataEducationItem[];\n  /** Prediction of the candidate's profession based on recent work experience */\n  profession?: string;\n  /** Linkedin account associated with the candidate */\n  linkedin?: string;\n  workExperience?: ResumeDataWorkExperienceItem[];\n  skills?: ResumeDataSkillsItem[];\n  certifications?: string[];\n  publications?: string[];\n  referees?: ResumeDataRefereesItem[];\n  sections?: ResumeDataSectionsItem[];\n  /** Probability that the given document is a resume. Values below 30 suggest that the document is not a resume. */\n  isResumeProbability?: number;\n  /** All of the raw text of the parsed resume, example is shortened for readiblity */\n  rawText?: string;\n}\n\nexport interface ResumeDataName {\n  raw?: string;\n  first?: string;\n  last?: string;\n  middle?: string;\n  title?: string;\n}\n\nexport interface Location {\n  formatted?: string;\n  postalCode?: string;\n  state?: string;\n  country?: string;\n  /** Two letter country code (ISO 3166-1 alpha-2) */\n  countryCode?: string;\n  rawInput: string;\n  streetNumber?: string;\n  street?: string;\n  apartmentNumber?: string;\n  city?: string;\n}\n\nexport interface ResumeDataEducationItem {\n  organization?: string;\n  accreditation?: ResumeDataEducationItemAccreditation;\n  grade?: ResumeDataEducationItemGrade;\n  location?: Location;\n  dates?: ResumeDataEducationItemDates;\n}\n\nexport interface ResumeDataEducationItemAccreditation {\n  education?: string;\n  inputStr?: string;\n  matchStr?: string;\n  educationLevel?: string;\n}\n\nexport interface ResumeDataEducationItemGrade {\n  raw?: string;\n  metric?: string;\n  value?: string;\n}\n\nexport interface ResumeDataEducationItemDates {\n  completionDate?: Date;\n  isCurrent?: boolean;\n  startDate?: Date;\n}\n\nexport interface ResumeDataWorkExperienceItem {\n  jobTitle?: string;\n  organization?: string;\n  location?: Location;\n  jobDescription?: string;\n  dates?: ResumeDataWorkExperienceItemDates;\n  occupation?: ResumeDataWorkExperienceItemOccupation;\n}\n\nexport interface ResumeDataWorkExperienceItemDates {\n  startDate?: Date;\n  endDate?: Date;\n  monthsInPosition?: number;\n  isCurrent?: boolean;\n}\n\nexport interface ResumeDataWorkExperienceItemOccupation {\n  /** The raw (not normalized) job title pulled from the work experience entry */\n  jobTitle?: string;\n  /** Mapped onto the EMSI job title taxonomy if a sufficiently close match exists. */\n  jobTitleNormalized?: string;\n  managementLevel?: Enum0;\n  classification?: Components1TryetgSchemasResumedataPropertiesWorkexperienceItemsPropertiesOccupationPropertiesClassification;\n}\n\nexport interface Components1TryetgSchemasResumedataPropertiesWorkexperienceItemsPropertiesOccupationPropertiesClassification {\n  /** SOC2020 classification for this job title */\n  title?: string;\n  /** SOC2020 minor group */\n  minorGroup?: string;\n  /** SOC2020 sub major group */\n  subMajorGroup?: string;\n  /** SOC2020 major group */\n  majorGroup?: string;\n  /** The 4 digit code representing the SOC2020 classification for this job title */\n  socCode?: number;\n}\n\nexport interface ResumeDataSkillsItem {\n  name?: string;\n  lastUsed?: string;\n  numberOfMonths?: number;\n  type?: string;\n  sources?: ResumeDataSkillsPropertiesItemsItem[];\n}\n\nexport interface ResumeDataSkillsPropertiesItemsItem {\n  section?: string;\n  position?: number;\n}\n\nexport interface ResumeDataRefereesItem {\n  name?: string;\n  text?: string;\n  email?: string;\n  number?: string;\n}\n\nexport interface ResumeDataSectionsItem {\n  sectionType?: string;\n  bbox?: number[];\n  pageIndex?: number;\n  text?: string;\n}\n\nexport interface ErrorModel {\n  errorCode?: string;\n  errorDetail?: string;\n}\n\nexport interface RedactedResume {\n  data: RedactedResumeData | null;\n  meta: Meta;\n  error: ErrorModel;\n}\n\nexport interface RedactedResumeData {\n  /** URL to redacted PDF */\n  redactedPdf?: string;\n}\n\nexport interface Paths1UtuacyResumeFormatsGetResponses200ContentApplicationJsonSchema {\n  /** Number of documents in result */\n  count?: number;\n  /** URL to request next page of results */\n  next?: string;\n  /** URL to request previous page of results */\n  previous?: string;\n  results?: Get200ApplicationJsonPropertiesItemsItem[];\n}\n\nexport interface Get200ApplicationJsonPropertiesItemsItem {\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier: string | null;\n  /** URL to a template to apply */\n  formatFile: string;\n}\n\nexport interface ReformattedResume {\n  data: ReformattedResumeData | null;\n  meta: Meta;\n  error: ErrorModel;\n}\n\nexport interface ReformattedResumeData {\n  reformattedFile?: string;\n}\n\nexport interface GetAllInvoicesResults {\n  /** Number of documents in result */\n  count?: number;\n  /** URL to request next page of results */\n  next?: string;\n  /** URL to request previous page of results */\n  previous?: string;\n  results?: Meta[];\n}\n\nexport interface Invoice {\n  data: InvoiceData | null;\n  meta: Meta;\n  error: ErrorModel;\n}\n\nexport interface InvoiceData {\n  invoiceDate?: string;\n  invoiceOrderDate?: string;\n  paymentDateDue?: string;\n  paymentAmountBase?: string;\n  paymentAmountTax?: string;\n  paymentAmountTotal?: string;\n  paymentAmountPaid?: string;\n  paymentAmountDue?: string;\n  invoiceNumber?: string;\n  invoicePurchaseOrderNumber?: string;\n  supplierBusinessNumber?: string;\n  customerNumber?: string;\n  customerBusinessNumber?: string;\n  paymentReference?: string;\n  bankAccountNumber?: string;\n  supplierVAT?: string;\n  customerVAT?: string;\n  bpayBillerCode?: string;\n  bpayReference?: string;\n  bankSortCode?: string;\n  bankIban?: string;\n  bankSwift?: string;\n  bankBSB?: string;\n  customerContactName?: string;\n  customerCompanyName?: string;\n  supplierCompanyName?: string;\n  customerBillingAddress?: Location;\n  customerDeliveryAddress?: Location;\n  supplierAddress?: Location;\n  customerPhoneNumber?: string;\n  supplierPhoneNumber?: string;\n  supplierFax?: string;\n  customerEmail?: string;\n  supplierEmail?: string;\n  supplierWebsite?: string;\n}\n\nexport interface Paths7EskthResumesPostRequestbodyContentMultipartFormDataSchema {\n  /** File as binary data blob. Supported formats: PDF, DOC, DOCX, TXT, RTF, HTML, PNG, JPG */\n  file?: coreRestPipeline.RequestBodyType;\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier?: string;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** URL to file to download and process */\n  url?: string;\n  /** If \"true\" (default), will return a response only after processing has completed. If \"false\", will return an empty data object which can be polled at the GET endpoint until processing is complete. */\n  wait?: string;\n  /** Language code in ISO 639-1 format. Must specify zh-cn or zh-tw for Chinese. */\n  language?: string;\n  /** The date/time in ISO-8601 format when the document will be automatically deleted.  Defaults to no expiry. */\n  expiryTime?: string;\n}\n\nexport interface Paths8DdhfcRedactedResumesPostRequestbodyContentMultipartFormDataSchema {\n  /** File as binary data blob. Supported formats: PDF, DOC, DOCX, TXT, RTF, HTML, PNG, JPG */\n  file?: coreRestPipeline.RequestBodyType;\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier?: string;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** URL to file to download and process */\n  url?: string;\n  /** Language code in ISO 639-1 format. Must specify zh-cn or zh-tw for Chinese. */\n  language?: string;\n  /** If \"true\" (default), will return a response only after processing has completed. If \"false\", will return an empty data object which can be polled at the GET endpoint until processing is complete. */\n  wait?: string;\n  /** Whether to redact headshot */\n  redactHeadshot?: string;\n  /** Whether to redact personal details (e.g. name, address) */\n  redactPersonalDetails?: string;\n  /** Whether to redact work details (e.g. company names) */\n  redactWorkDetails?: string;\n  /** Whether to redact education details (e.g. university names) */\n  redactEducationDetails?: string;\n  /** Whether to redact referee details */\n  redactReferees?: string;\n  /** Whether to redact location names */\n  redactLocations?: string;\n  /** Whether to redact dates */\n  redactDates?: string;\n  /** Whether to redact gender */\n  redactGender?: string;\n  /** The date/time in ISO-8601 format when the document will be automatically deleted.  Defaults to no expiry. */\n  expiryTime?: string;\n}\n\nexport interface PathsYzn84IReformattedResumesPostRequestbodyContentMultipartFormDataSchema {\n  /** File as binary data blob. Supported formats: PDF, DOC, DOCX, TXT, RTF, HTML, PNG, JPG */\n  file?: coreRestPipeline.RequestBodyType;\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier?: string;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** URL to file to download and process */\n  url?: string;\n  /** Language code in ISO 639-1 format. Must specify zh-cn or zh-tw for Chinese. */\n  language?: string;\n  /** Identifier of the format used */\n  resumeFormat: string;\n  /** If \"true\" (default), will return a response only after processing has completed. If \"false\", will return an empty data object which can be polled at the GET endpoint until processing is complete. */\n  wait?: string;\n}\n\nexport interface Paths1BwrvmkInvoicesPostRequestbodyContentMultipartFormDataSchema {\n  /** File as binary data blob. Supported formats: PDF, DOC, DOCX, TXT, RTF, HTML, PNG, JPG */\n  file?: coreRestPipeline.RequestBodyType;\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier?: string;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** URL to file to download and process */\n  url?: string;\n  /** If \"true\" (default), will return a response only after processing has completed. If \"false\", will return an empty data object which can be polled at the GET endpoint until processing is complete. */\n  wait?: string;\n  /** Language code in ISO 639-1 format. Must specify zh-cn or zh-tw for Chinese. */\n  language?: string;\n  /** The date/time in ISO-8601 format when the document will be automatically deleted.  Defaults to no expiry. */\n  expiryTime?: string;\n}\n\n/** Known values of {@link Enum0} that the service accepts. */\nexport enum KnownEnum0 {\n  None = \"None\",\n  Low = \"Low\",\n  Mid = \"Mid\",\n  Upper = \"Upper\"\n}\n\n/**\n * Defines values for Enum0. \\\n * {@link KnownEnum0} can be used interchangeably with Enum0,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Low** \\\n * **Mid** \\\n * **Upper**\n */\nexport type Enum0 = string;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetAllResumesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAllResumes operation. */\nexport type AffindaAPIGetAllResumesResponse = GetAllDocumentsResults;\n\n/** Optional parameters. */\nexport interface AffindaAPICreateResumeOptionalParams\n  extends coreClient.OperationOptions {\n  /** File as binary data blob. Supported formats: PDF, DOC, DOCX, TXT, RTF, HTML, PNG, JPG */\n  file?: coreRestPipeline.RequestBodyType;\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier?: string;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** URL to file to download and process */\n  url?: string;\n  /** If \"true\" (default), will return a response only after processing has completed. If \"false\", will return an empty data object which can be polled at the GET endpoint until processing is complete. */\n  wait?: string;\n  /** Language code in ISO 639-1 format. Must specify zh-cn or zh-tw for Chinese. */\n  language?: string;\n  /** The date/time in ISO-8601 format when the document will be automatically deleted.  Defaults to no expiry. */\n  expiryTime?: string;\n}\n\n/** Contains response data for the createResume operation. */\nexport type AffindaAPICreateResumeResponse = Resume;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetResumeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getResume operation. */\nexport type AffindaAPIGetResumeResponse = Resume;\n\n/** Optional parameters. */\nexport interface AffindaAPIDeleteResumeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteResume operation. */\nexport type AffindaAPIDeleteResumeResponse = RequestError;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetAllRedactedResumesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAllRedactedResumes operation. */\nexport type AffindaAPIGetAllRedactedResumesResponse = GetAllDocumentsResults;\n\n/** Optional parameters. */\nexport interface AffindaAPICreateRedactedResumeOptionalParams\n  extends coreClient.OperationOptions {\n  /** File as binary data blob. Supported formats: PDF, DOC, DOCX, TXT, RTF, HTML, PNG, JPG */\n  file?: coreRestPipeline.RequestBodyType;\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier?: string;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** URL to file to download and process */\n  url?: string;\n  /** If \"true\" (default), will return a response only after processing has completed. If \"false\", will return an empty data object which can be polled at the GET endpoint until processing is complete. */\n  wait?: string;\n  /** Language code in ISO 639-1 format. Must specify zh-cn or zh-tw for Chinese. */\n  language?: string;\n  /** The date/time in ISO-8601 format when the document will be automatically deleted.  Defaults to no expiry. */\n  expiryTime?: string;\n  /** Whether to redact headshot */\n  redactHeadshot?: string;\n  /** Whether to redact personal details (e.g. name, address) */\n  redactPersonalDetails?: string;\n  /** Whether to redact work details (e.g. company names) */\n  redactWorkDetails?: string;\n  /** Whether to redact education details (e.g. university names) */\n  redactEducationDetails?: string;\n  /** Whether to redact referee details */\n  redactReferees?: string;\n  /** Whether to redact location names */\n  redactLocations?: string;\n  /** Whether to redact dates */\n  redactDates?: string;\n  /** Whether to redact gender */\n  redactGender?: string;\n}\n\n/** Contains response data for the createRedactedResume operation. */\nexport type AffindaAPICreateRedactedResumeResponse = RedactedResume;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetRedactedResumeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getRedactedResume operation. */\nexport type AffindaAPIGetRedactedResumeResponse = RedactedResume;\n\n/** Optional parameters. */\nexport interface AffindaAPIDeleteRedactedResumeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteRedactedResume operation. */\nexport type AffindaAPIDeleteRedactedResumeResponse = RequestError;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetAllResumeFormatsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAllResumeFormats operation. */\nexport type AffindaAPIGetAllResumeFormatsResponse = Paths1UtuacyResumeFormatsGetResponses200ContentApplicationJsonSchema;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetAllReformattedResumesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAllReformattedResumes operation. */\nexport type AffindaAPIGetAllReformattedResumesResponse = GetAllDocumentsResults;\n\n/** Optional parameters. */\nexport interface AffindaAPICreateReformattedResumeOptionalParams\n  extends coreClient.OperationOptions {\n  /** File as binary data blob. Supported formats: PDF, DOC, DOCX, TXT, RTF, HTML, PNG, JPG */\n  file?: coreRestPipeline.RequestBodyType;\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier?: string;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** URL to file to download and process */\n  url?: string;\n  /** If \"true\" (default), will return a response only after processing has completed. If \"false\", will return an empty data object which can be polled at the GET endpoint until processing is complete. */\n  wait?: string;\n  /** Language code in ISO 639-1 format. Must specify zh-cn or zh-tw for Chinese. */\n  language?: string;\n}\n\n/** Contains response data for the createReformattedResume operation. */\nexport type AffindaAPICreateReformattedResumeResponse = ReformattedResume;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetReformattedResumeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getReformattedResume operation. */\nexport type AffindaAPIGetReformattedResumeResponse = ReformattedResume;\n\n/** Optional parameters. */\nexport interface AffindaAPIDeleteReformattedResumeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteReformattedResume operation. */\nexport type AffindaAPIDeleteReformattedResumeResponse = RequestError;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetAllInvoicesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAllInvoices operation. */\nexport type AffindaAPIGetAllInvoicesResponse = GetAllInvoicesResults;\n\n/** Optional parameters. */\nexport interface AffindaAPICreateInvoiceOptionalParams\n  extends coreClient.OperationOptions {\n  /** File as binary data blob. Supported formats: PDF, DOC, DOCX, TXT, RTF, HTML, PNG, JPG */\n  file?: coreRestPipeline.RequestBodyType;\n  /** Unique identifier for the document. If creating a document and left blank, one will be automatically generated. */\n  identifier?: string;\n  /** Optional filename of the file */\n  fileName?: string;\n  /** URL to file to download and process */\n  url?: string;\n  /** If \"true\" (default), will return a response only after processing has completed. If \"false\", will return an empty data object which can be polled at the GET endpoint until processing is complete. */\n  wait?: string;\n  /** Language code in ISO 639-1 format. Must specify zh-cn or zh-tw for Chinese. */\n  language?: string;\n  /** The date/time in ISO-8601 format when the document will be automatically deleted.  Defaults to no expiry. */\n  expiryTime?: string;\n}\n\n/** Contains response data for the createInvoice operation. */\nexport type AffindaAPICreateInvoiceResponse = Invoice;\n\n/** Optional parameters. */\nexport interface AffindaAPIGetInvoiceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getInvoice operation. */\nexport type AffindaAPIGetInvoiceResponse = Invoice;\n\n/** Optional parameters. */\nexport interface AffindaAPIDeleteInvoiceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteInvoice operation. */\nexport type AffindaAPIDeleteInvoiceResponse = RequestError;\n\n/** Optional parameters. */\nexport interface AffindaAPIOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** The numbers of documents to return, defaults to 300. */\n  limit?: number;\n  /** The number of documents to skip before starting to collect the result set. */\n  offset?: number;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: \"limit\",\n  mapper: {\n    defaultValue: 300,\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const offset: OperationQueryParameter = {\n  parameterPath: \"offset\",\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    serializedName: \"offset\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"multipart/form-data\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const file: OperationParameter = {\n  parameterPath: [\"options\", \"file\"],\n  mapper: {\n    serializedName: \"file\",\n    type: {\n      name: \"Stream\"\n    }\n  }\n};\n\nexport const identifier: OperationParameter = {\n  parameterPath: [\"options\", \"identifier\"],\n  mapper: {\n    serializedName: \"identifier\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileName: OperationParameter = {\n  parameterPath: [\"options\", \"fileName\"],\n  mapper: {\n    serializedName: \"fileName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const url: OperationParameter = {\n  parameterPath: [\"options\", \"url\"],\n  mapper: {\n    serializedName: \"url\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const wait: OperationParameter = {\n  parameterPath: [\"options\", \"wait\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"wait\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const language: OperationParameter = {\n  parameterPath: [\"options\", \"language\"],\n  mapper: {\n    serializedName: \"language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expiryTime: OperationParameter = {\n  parameterPath: [\"options\", \"expiryTime\"],\n  mapper: {\n    serializedName: \"expiryTime\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const identifier1: OperationURLParameter = {\n  parameterPath: \"identifier\",\n  mapper: {\n    serializedName: \"identifier\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const redactHeadshot: OperationParameter = {\n  parameterPath: [\"options\", \"redactHeadshot\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"redactHeadshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const redactPersonalDetails: OperationParameter = {\n  parameterPath: [\"options\", \"redactPersonalDetails\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"redactPersonalDetails\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const redactWorkDetails: OperationParameter = {\n  parameterPath: [\"options\", \"redactWorkDetails\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"redactWorkDetails\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const redactEducationDetails: OperationParameter = {\n  parameterPath: [\"options\", \"redactEducationDetails\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"redactEducationDetails\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const redactReferees: OperationParameter = {\n  parameterPath: [\"options\", \"redactReferees\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"redactReferees\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const redactLocations: OperationParameter = {\n  parameterPath: [\"options\", \"redactLocations\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"redactLocations\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const redactDates: OperationParameter = {\n  parameterPath: [\"options\", \"redactDates\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"redactDates\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const redactGender: OperationParameter = {\n  parameterPath: [\"options\", \"redactGender\"],\n  mapper: {\n    defaultValue: \"true\",\n    serializedName: \"redactGender\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resumeFormat: OperationParameter = {\n  parameterPath: \"resumeFormat\",\n  mapper: {\n    serializedName: \"resumeFormat\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\n\nexport const GetAllDocumentsResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GetAllDocumentsResults\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      next: {\n        serializedName: \"next\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      previous: {\n        serializedName: \"previous\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Meta\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Meta: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Meta\",\n    modelProperties: {\n      identifier: {\n        serializedName: \"identifier\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fileName: {\n        serializedName: \"fileName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ready: {\n        serializedName: \"ready\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      readyDt: {\n        serializedName: \"readyDt\",\n        nullable: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      failed: {\n        serializedName: \"failed\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"expiryTime\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RequestError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RequestError\",\n    modelProperties: {\n      detail: {\n        serializedName: \"detail\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusCode: {\n        serializedName: \"statusCode\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resume: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resume\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Composite\",\n          className: \"ResumeData\"\n        }\n      },\n      meta: {\n        serializedName: \"meta\",\n        type: {\n          name: \"Composite\",\n          className: \"Meta\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeData\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"ResumeDataName\"\n        }\n      },\n      phoneNumbers: {\n        serializedName: \"phoneNumbers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      websites: {\n        serializedName: \"websites\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emails: {\n        serializedName: \"emails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      dateOfBirth: {\n        serializedName: \"dateOfBirth\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"Composite\",\n          className: \"Location\"\n        }\n      },\n      objective: {\n        serializedName: \"objective\",\n        type: {\n          name: \"String\"\n        }\n      },\n      languages: {\n        serializedName: \"languages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      summary: {\n        serializedName: \"summary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalYearsExperience: {\n        serializedName: \"totalYearsExperience\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      headShot: {\n        serializedName: \"headShot\",\n        nullable: true,\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      education: {\n        serializedName: \"education\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResumeDataEducationItem\"\n            }\n          }\n        }\n      },\n      profession: {\n        serializedName: \"profession\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      linkedin: {\n        serializedName: \"linkedin\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      workExperience: {\n        serializedName: \"workExperience\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResumeDataWorkExperienceItem\"\n            }\n          }\n        }\n      },\n      skills: {\n        serializedName: \"skills\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResumeDataSkillsItem\"\n            }\n          }\n        }\n      },\n      certifications: {\n        serializedName: \"certifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      publications: {\n        serializedName: \"publications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      referees: {\n        serializedName: \"referees\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResumeDataRefereesItem\"\n            }\n          }\n        }\n      },\n      sections: {\n        serializedName: \"sections\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResumeDataSectionsItem\"\n            }\n          }\n        }\n      },\n      isResumeProbability: {\n        serializedName: \"isResumeProbability\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      rawText: {\n        serializedName: \"rawText\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataName\",\n    modelProperties: {\n      raw: {\n        serializedName: \"raw\",\n        type: {\n          name: \"String\"\n        }\n      },\n      first: {\n        serializedName: \"first\",\n        type: {\n          name: \"String\"\n        }\n      },\n      last: {\n        serializedName: \"last\",\n        type: {\n          name: \"String\"\n        }\n      },\n      middle: {\n        serializedName: \"middle\",\n        type: {\n          name: \"String\"\n        }\n      },\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Location: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Location\",\n    modelProperties: {\n      formatted: {\n        serializedName: \"formatted\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      postalCode: {\n        serializedName: \"postalCode\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      country: {\n        serializedName: \"country\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      countryCode: {\n        serializedName: \"countryCode\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rawInput: {\n        serializedName: \"rawInput\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      streetNumber: {\n        serializedName: \"streetNumber\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      street: {\n        serializedName: \"street\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      apartmentNumber: {\n        serializedName: \"apartmentNumber\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      city: {\n        serializedName: \"city\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataEducationItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataEducationItem\",\n    modelProperties: {\n      organization: {\n        serializedName: \"organization\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accreditation: {\n        serializedName: \"accreditation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResumeDataEducationItemAccreditation\"\n        }\n      },\n      grade: {\n        serializedName: \"grade\",\n        type: {\n          name: \"Composite\",\n          className: \"ResumeDataEducationItemGrade\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"Composite\",\n          className: \"Location\"\n        }\n      },\n      dates: {\n        serializedName: \"dates\",\n        type: {\n          name: \"Composite\",\n          className: \"ResumeDataEducationItemDates\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataEducationItemAccreditation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataEducationItemAccreditation\",\n    modelProperties: {\n      education: {\n        serializedName: \"education\",\n        type: {\n          name: \"String\"\n        }\n      },\n      inputStr: {\n        serializedName: \"inputStr\",\n        type: {\n          name: \"String\"\n        }\n      },\n      matchStr: {\n        serializedName: \"matchStr\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      educationLevel: {\n        serializedName: \"educationLevel\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataEducationItemGrade: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataEducationItemGrade\",\n    modelProperties: {\n      raw: {\n        serializedName: \"raw\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metric: {\n        serializedName: \"metric\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataEducationItemDates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataEducationItemDates\",\n    modelProperties: {\n      completionDate: {\n        serializedName: \"completionDate\",\n        type: {\n          name: \"Date\"\n        }\n      },\n      isCurrent: {\n        serializedName: \"isCurrent\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      startDate: {\n        serializedName: \"startDate\",\n        nullable: true,\n        type: {\n          name: \"Date\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataWorkExperienceItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataWorkExperienceItem\",\n    modelProperties: {\n      jobTitle: {\n        serializedName: \"jobTitle\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      organization: {\n        serializedName: \"organization\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"Composite\",\n          className: \"Location\"\n        }\n      },\n      jobDescription: {\n        serializedName: \"jobDescription\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dates: {\n        serializedName: \"dates\",\n        type: {\n          name: \"Composite\",\n          className: \"ResumeDataWorkExperienceItemDates\"\n        }\n      },\n      occupation: {\n        serializedName: \"occupation\",\n        type: {\n          name: \"Composite\",\n          className: \"ResumeDataWorkExperienceItemOccupation\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataWorkExperienceItemDates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataWorkExperienceItemDates\",\n    modelProperties: {\n      startDate: {\n        serializedName: \"startDate\",\n        nullable: true,\n        type: {\n          name: \"Date\"\n        }\n      },\n      endDate: {\n        serializedName: \"endDate\",\n        nullable: true,\n        type: {\n          name: \"Date\"\n        }\n      },\n      monthsInPosition: {\n        serializedName: \"monthsInPosition\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isCurrent: {\n        serializedName: \"isCurrent\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataWorkExperienceItemOccupation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataWorkExperienceItemOccupation\",\n    modelProperties: {\n      jobTitle: {\n        serializedName: \"jobTitle\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      jobTitleNormalized: {\n        serializedName: \"jobTitleNormalized\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managementLevel: {\n        serializedName: \"managementLevel\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      classification: {\n        serializedName: \"classification\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"Components1TryetgSchemasResumedataPropertiesWorkexperienceItemsPropertiesOccupationPropertiesClassification\"\n        }\n      }\n    }\n  }\n};\n\nexport const Components1TryetgSchemasResumedataPropertiesWorkexperienceItemsPropertiesOccupationPropertiesClassification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Components1TryetgSchemasResumedataPropertiesWorkexperienceItemsPropertiesOccupationPropertiesClassification\",\n    modelProperties: {\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      minorGroup: {\n        serializedName: \"minorGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subMajorGroup: {\n        serializedName: \"subMajorGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      majorGroup: {\n        serializedName: \"majorGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      socCode: {\n        serializedName: \"socCode\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataSkillsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataSkillsItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastUsed: {\n        serializedName: \"lastUsed\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfMonths: {\n        serializedName: \"numberOfMonths\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sources: {\n        serializedName: \"sources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResumeDataSkillsPropertiesItemsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataSkillsPropertiesItemsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataSkillsPropertiesItemsItem\",\n    modelProperties: {\n      section: {\n        serializedName: \"section\",\n        type: {\n          name: \"String\"\n        }\n      },\n      position: {\n        serializedName: \"position\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataRefereesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataRefereesItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      text: {\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      email: {\n        serializedName: \"email\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      number: {\n        serializedName: \"number\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResumeDataSectionsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResumeDataSectionsItem\",\n    modelProperties: {\n      sectionType: {\n        serializedName: \"sectionType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bbox: {\n        constraints: {\n          MinItems: 4,\n          MaxItems: 4\n        },\n        serializedName: \"bbox\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      pageIndex: {\n        serializedName: \"pageIndex\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      text: {\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"errorCode\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorDetail: {\n        serializedName: \"errorDetail\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RedactedResume: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RedactedResume\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Composite\",\n          className: \"RedactedResumeData\"\n        }\n      },\n      meta: {\n        serializedName: \"meta\",\n        type: {\n          name: \"Composite\",\n          className: \"Meta\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const RedactedResumeData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RedactedResumeData\",\n    modelProperties: {\n      redactedPdf: {\n        serializedName: \"redactedPdf\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1UtuacyResumeFormatsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1UtuacyResumeFormatsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      next: {\n        serializedName: \"next\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      previous: {\n        serializedName: \"previous\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Get200ApplicationJsonPropertiesItemsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Get200ApplicationJsonPropertiesItemsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Get200ApplicationJsonPropertiesItemsItem\",\n    modelProperties: {\n      identifier: {\n        serializedName: \"identifier\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      formatFile: {\n        serializedName: \"formatFile\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReformattedResume: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReformattedResume\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Composite\",\n          className: \"ReformattedResumeData\"\n        }\n      },\n      meta: {\n        serializedName: \"meta\",\n        type: {\n          name: \"Composite\",\n          className: \"Meta\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReformattedResumeData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReformattedResumeData\",\n    modelProperties: {\n      reformattedFile: {\n        serializedName: \"reformattedFile\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetAllInvoicesResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GetAllInvoicesResults\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      next: {\n        serializedName: \"next\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      previous: {\n        serializedName: \"previous\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Meta\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Invoice: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Invoice\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Composite\",\n          className: \"InvoiceData\"\n        }\n      },\n      meta: {\n        serializedName: \"meta\",\n        type: {\n          name: \"Composite\",\n          className: \"Meta\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const InvoiceData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InvoiceData\",\n    modelProperties: {\n      invoiceDate: {\n        serializedName: \"invoiceDate\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceOrderDate: {\n        serializedName: \"invoiceOrderDate\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      paymentDateDue: {\n        serializedName: \"paymentDateDue\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      paymentAmountBase: {\n        serializedName: \"paymentAmountBase\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      paymentAmountTax: {\n        serializedName: \"paymentAmountTax\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      paymentAmountTotal: {\n        serializedName: \"paymentAmountTotal\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      paymentAmountPaid: {\n        serializedName: \"paymentAmountPaid\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      paymentAmountDue: {\n        serializedName: \"paymentAmountDue\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoiceNumber: {\n        serializedName: \"invoiceNumber\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      invoicePurchaseOrderNumber: {\n        serializedName: \"invoicePurchaseOrderNumber\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supplierBusinessNumber: {\n        serializedName: \"supplierBusinessNumber\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerNumber: {\n        serializedName: \"customerNumber\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerBusinessNumber: {\n        serializedName: \"customerBusinessNumber\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      paymentReference: {\n        serializedName: \"paymentReference\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bankAccountNumber: {\n        serializedName: \"bankAccountNumber\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supplierVAT: {\n        serializedName: \"supplierVAT\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerVAT: {\n        serializedName: \"customerVAT\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bpayBillerCode: {\n        serializedName: \"bpayBillerCode\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bpayReference: {\n        serializedName: \"bpayReference\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bankSortCode: {\n        serializedName: \"bankSortCode\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bankIban: {\n        serializedName: \"bankIBAN\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bankSwift: {\n        serializedName: \"bankSwift\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bankBSB: {\n        serializedName: \"bankBSB\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerContactName: {\n        serializedName: \"customerContactName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerCompanyName: {\n        serializedName: \"customerCompanyName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supplierCompanyName: {\n        serializedName: \"supplierCompanyName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      customerBillingAddress: {\n        serializedName: \"customerBillingAddress\",\n        type: {\n          name: \"Composite\",\n          className: \"Location\"\n        }\n      },\n      customerDeliveryAddress: {\n        serializedName: \"customerDeliveryAddress\",\n        type: {\n          name: \"Composite\",\n          className: \"Location\"\n        }\n      },\n      supplierAddress: {\n        serializedName: \"supplierAddress\",\n        type: {\n          name: \"Composite\",\n          className: \"Location\"\n        }\n      },\n      customerPhoneNumber: {\n        serializedName: \"customerPhoneNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supplierPhoneNumber: {\n        serializedName: \"supplierPhoneNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supplierFax: {\n        serializedName: \"supplierFax\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customerEmail: {\n        serializedName: \"customerEmail\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supplierEmail: {\n        serializedName: \"supplierEmail\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supplierWebsite: {\n        serializedName: \"supplierWebsite\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths7EskthResumesPostRequestbodyContentMultipartFormDataSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths7EskthResumesPostRequestbodyContentMultipartFormDataSchema\",\n    modelProperties: {\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      identifier: {\n        serializedName: \"identifier\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fileName: {\n        serializedName: \"fileName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      wait: {\n        defaultValue: \"true\",\n        serializedName: \"wait\",\n        type: {\n          name: \"String\"\n        }\n      },\n      language: {\n        serializedName: \"language\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"expiryTime\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths8DdhfcRedactedResumesPostRequestbodyContentMultipartFormDataSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths8DdhfcRedactedResumesPostRequestbodyContentMultipartFormDataSchema\",\n    modelProperties: {\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      identifier: {\n        serializedName: \"identifier\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fileName: {\n        serializedName: \"fileName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      language: {\n        serializedName: \"language\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      wait: {\n        defaultValue: \"true\",\n        serializedName: \"wait\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redactHeadshot: {\n        defaultValue: \"true\",\n        serializedName: \"redactHeadshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redactPersonalDetails: {\n        defaultValue: \"true\",\n        serializedName: \"redactPersonalDetails\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redactWorkDetails: {\n        defaultValue: \"true\",\n        serializedName: \"redactWorkDetails\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redactEducationDetails: {\n        defaultValue: \"true\",\n        serializedName: \"redactEducationDetails\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redactReferees: {\n        defaultValue: \"true\",\n        serializedName: \"redactReferees\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redactLocations: {\n        defaultValue: \"true\",\n        serializedName: \"redactLocations\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redactDates: {\n        defaultValue: \"true\",\n        serializedName: \"redactDates\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redactGender: {\n        defaultValue: \"true\",\n        serializedName: \"redactGender\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"expiryTime\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsYzn84IReformattedResumesPostRequestbodyContentMultipartFormDataSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsYzn84IReformattedResumesPostRequestbodyContentMultipartFormDataSchema\",\n    modelProperties: {\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      identifier: {\n        serializedName: \"identifier\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fileName: {\n        serializedName: \"fileName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      language: {\n        serializedName: \"language\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resumeFormat: {\n        serializedName: \"resumeFormat\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      wait: {\n        defaultValue: \"true\",\n        serializedName: \"wait\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1BwrvmkInvoicesPostRequestbodyContentMultipartFormDataSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1BwrvmkInvoicesPostRequestbodyContentMultipartFormDataSchema\",\n    modelProperties: {\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      identifier: {\n        serializedName: \"identifier\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fileName: {\n        serializedName: \"fileName\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      wait: {\n        defaultValue: \"true\",\n        serializedName: \"wait\",\n        type: {\n          name: \"String\"\n        }\n      },\n      language: {\n        serializedName: \"language\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"expiryTime\",\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport { AffindaAPIOptionalParams } from \"./models\";\n\nexport class AffindaAPIContext extends coreClient.ServiceClient {\n  $host: string;\n  limit?: number;\n  offset?: number;\n\n  /**\n   * Initializes a new instance of the AffindaAPIContext class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: AffindaAPIOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AffindaAPIOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-affinda/0.3.2`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://api.affinda.com/v1\"\n    };\n    super(optionsWithDefaults);\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://api.affinda.com/v1\";\n  }\n}\n","import * as coreClient from \"@azure/core-client\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport { AffindaAPIContext } from \"./affindaAPIContext\";\nimport {\n  AffindaAPIOptionalParams,\n  AffindaAPIGetAllResumesOptionalParams,\n  AffindaAPIGetAllResumesResponse,\n  AffindaAPICreateResumeOptionalParams,\n  AffindaAPICreateResumeResponse,\n  AffindaAPIGetResumeOptionalParams,\n  AffindaAPIGetResumeResponse,\n  AffindaAPIDeleteResumeOptionalParams,\n  AffindaAPIDeleteResumeResponse,\n  AffindaAPIGetAllRedactedResumesOptionalParams,\n  AffindaAPIGetAllRedactedResumesResponse,\n  AffindaAPICreateRedactedResumeOptionalParams,\n  AffindaAPICreateRedactedResumeResponse,\n  AffindaAPIGetRedactedResumeOptionalParams,\n  AffindaAPIGetRedactedResumeResponse,\n  AffindaAPIDeleteRedactedResumeOptionalParams,\n  AffindaAPIDeleteRedactedResumeResponse,\n  AffindaAPIGetAllResumeFormatsOptionalParams,\n  AffindaAPIGetAllResumeFormatsResponse,\n  AffindaAPIGetAllReformattedResumesOptionalParams,\n  AffindaAPIGetAllReformattedResumesResponse,\n  AffindaAPICreateReformattedResumeOptionalParams,\n  AffindaAPICreateReformattedResumeResponse,\n  AffindaAPIGetReformattedResumeOptionalParams,\n  AffindaAPIGetReformattedResumeResponse,\n  AffindaAPIDeleteReformattedResumeOptionalParams,\n  AffindaAPIDeleteReformattedResumeResponse,\n  AffindaAPIGetAllInvoicesOptionalParams,\n  AffindaAPIGetAllInvoicesResponse,\n  AffindaAPICreateInvoiceOptionalParams,\n  AffindaAPICreateInvoiceResponse,\n  AffindaAPIGetInvoiceOptionalParams,\n  AffindaAPIGetInvoiceResponse,\n  AffindaAPIDeleteInvoiceOptionalParams,\n  AffindaAPIDeleteInvoiceResponse\n} from \"./models\";\n\nexport class AffindaAPI extends AffindaAPIContext {\n  /**\n   * Initializes a new instance of the AffindaAPI class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: AffindaAPIOptionalParams\n  ) {\n    super(credentials, options);\n  }\n\n  /**\n   * Returns all the resume summaries for that user, limited to 300 per page.\n   * @param options The options parameters.\n   */\n  getAllResumes(\n    options?: AffindaAPIGetAllResumesOptionalParams\n  ): Promise<AffindaAPIGetAllResumesResponse> {\n    return this.sendOperationRequest({ options }, getAllResumesOperationSpec);\n  }\n\n  /**\n   * Uploads a resume for parsing.\n   * When successful, returns an `identifier` in the response for subsequent use with the\n   * [/resumes/{identifier}](#operation/getResume) endpoint to check processing status and retrieve\n   * results.\n   * @param options The options parameters.\n   */\n  createResume(\n    options?: AffindaAPICreateResumeOptionalParams\n  ): Promise<AffindaAPICreateResumeResponse> {\n    return this.sendOperationRequest({ options }, createResumeOperationSpec);\n  }\n\n  /**\n   * Returns all the parse results for that resume if processing is completed.\n   * The `identifier` is the unique ID returned after POST-ing the resume via the\n   * [/resumes](#operation/createResume) endpoint.\n   * @param identifier Document identifier\n   * @param options The options parameters.\n   */\n  getResume(\n    identifier: string | null,\n    options?: AffindaAPIGetResumeOptionalParams\n  ): Promise<AffindaAPIGetResumeResponse> {\n    return this.sendOperationRequest(\n      { identifier, options },\n      getResumeOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified resume from the database\n   * @param identifier Resume identifier\n   * @param options The options parameters.\n   */\n  deleteResume(\n    identifier: string | null,\n    options?: AffindaAPIDeleteResumeOptionalParams\n  ): Promise<AffindaAPIDeleteResumeResponse> {\n    return this.sendOperationRequest(\n      { identifier, options },\n      deleteResumeOperationSpec\n    );\n  }\n\n  /**\n   * Returns all the redacted resume information for that resume\n   * @param options The options parameters.\n   */\n  getAllRedactedResumes(\n    options?: AffindaAPIGetAllRedactedResumesOptionalParams\n  ): Promise<AffindaAPIGetAllRedactedResumesResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAllRedactedResumesOperationSpec\n    );\n  }\n\n  /**\n   * Uploads a resume for redacting.\n   * @param options The options parameters.\n   */\n  createRedactedResume(\n    options?: AffindaAPICreateRedactedResumeOptionalParams\n  ): Promise<AffindaAPICreateRedactedResumeResponse> {\n    return this.sendOperationRequest(\n      { options },\n      createRedactedResumeOperationSpec\n    );\n  }\n\n  /**\n   * Returns all the redaction results for that resume if processing is completed.\n   * The `identifier` is the unique ID returned after POST-ing the resume via the\n   * [/redacted_resumes](#operation/createRedactedResume) endpoint.\n   * @param identifier Document identifier\n   * @param options The options parameters.\n   */\n  getRedactedResume(\n    identifier: string | null,\n    options?: AffindaAPIGetRedactedResumeOptionalParams\n  ): Promise<AffindaAPIGetRedactedResumeResponse> {\n    return this.sendOperationRequest(\n      { identifier, options },\n      getRedactedResumeOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified resume from the database\n   * @param identifier Document identifier\n   * @param options The options parameters.\n   */\n  deleteRedactedResume(\n    identifier: string | null,\n    options?: AffindaAPIDeleteRedactedResumeOptionalParams\n  ): Promise<AffindaAPIDeleteRedactedResumeResponse> {\n    return this.sendOperationRequest(\n      { identifier, options },\n      deleteRedactedResumeOperationSpec\n    );\n  }\n\n  /**\n   * Returns all the resume formats\n   * @param options The options parameters.\n   */\n  getAllResumeFormats(\n    options?: AffindaAPIGetAllResumeFormatsOptionalParams\n  ): Promise<AffindaAPIGetAllResumeFormatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAllResumeFormatsOperationSpec\n    );\n  }\n\n  /**\n   * Returns all the reformatted resume information for that resume\n   * @param options The options parameters.\n   */\n  getAllReformattedResumes(\n    options?: AffindaAPIGetAllReformattedResumesOptionalParams\n  ): Promise<AffindaAPIGetAllReformattedResumesResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAllReformattedResumesOperationSpec\n    );\n  }\n\n  /**\n   * Upload a resume for reformatting.\n   * @param resumeFormat Identifier of the format used\n   * @param options The options parameters.\n   */\n  createReformattedResume(\n    resumeFormat: string,\n    options?: AffindaAPICreateReformattedResumeOptionalParams\n  ): Promise<AffindaAPICreateReformattedResumeResponse> {\n    return this.sendOperationRequest(\n      { resumeFormat, options },\n      createReformattedResumeOperationSpec\n    );\n  }\n\n  /**\n   * Returns all the reformatting results for that resume if processing is completed.\n   * The `identifier` is the unique ID returned after POST-ing the resume via the\n   * [/reformatted_resumes](#operation/createReformattedResume) endpoint.\n   * @param identifier Document identifier\n   * @param options The options parameters.\n   */\n  getReformattedResume(\n    identifier: string | null,\n    options?: AffindaAPIGetReformattedResumeOptionalParams\n  ): Promise<AffindaAPIGetReformattedResumeResponse> {\n    return this.sendOperationRequest(\n      { identifier, options },\n      getReformattedResumeOperationSpec\n    );\n  }\n\n  /**\n   * Delete the specified resume from the database\n   * @param identifier Document identifier\n   * @param options The options parameters.\n   */\n  deleteReformattedResume(\n    identifier: string | null,\n    options?: AffindaAPIDeleteReformattedResumeOptionalParams\n  ): Promise<AffindaAPIDeleteReformattedResumeResponse> {\n    return this.sendOperationRequest(\n      { identifier, options },\n      deleteReformattedResumeOperationSpec\n    );\n  }\n\n  /**\n   * Returns all the invoice summaries for that user, limited to 300 per page.\n   * @param options The options parameters.\n   */\n  getAllInvoices(\n    options?: AffindaAPIGetAllInvoicesOptionalParams\n  ): Promise<AffindaAPIGetAllInvoicesResponse> {\n    return this.sendOperationRequest({ options }, getAllInvoicesOperationSpec);\n  }\n\n  /**\n   * Uploads an invoice for parsing.\n   * When successful, returns an `identifier` in the response for subsequent use with the\n   * [/invoices/{identifier}](#operation/getInvoice) endpoint to check processing status and retrieve\n   * results.\n   * @param options The options parameters.\n   */\n  createInvoice(\n    options?: AffindaAPICreateInvoiceOptionalParams\n  ): Promise<AffindaAPICreateInvoiceResponse> {\n    return this.sendOperationRequest({ options }, createInvoiceOperationSpec);\n  }\n\n  /**\n   * Returns all the parse results for that invoice if processing is completed.\n   * The `identifier` is the unique ID returned after POST-ing the invoice via the\n   * [/invoices](#operation/createInvoice) endpoint.\n   * @param identifier Document identifier\n   * @param options The options parameters.\n   */\n  getInvoice(\n    identifier: string | null,\n    options?: AffindaAPIGetInvoiceOptionalParams\n  ): Promise<AffindaAPIGetInvoiceResponse> {\n    return this.sendOperationRequest(\n      { identifier, options },\n      getInvoiceOperationSpec\n    );\n  }\n\n  /**\n   * Delete the specified invoice from the database\n   * @param identifier Invoice identifier\n   * @param options The options parameters.\n   */\n  deleteInvoice(\n    identifier: string | null,\n    options?: AffindaAPIDeleteInvoiceOptionalParams\n  ): Promise<AffindaAPIDeleteInvoiceResponse> {\n    return this.sendOperationRequest(\n      { identifier, options },\n      deleteInvoiceOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAllResumesOperationSpec: coreClient.OperationSpec = {\n  path: \"/resumes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetAllDocumentsResults\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.offset],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/resumes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Resume\n    },\n    201: {\n      bodyMapper: Mappers.Resume\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  formDataParameters: [\n    Parameters.file,\n    Parameters.identifier,\n    Parameters.fileName,\n    Parameters.url,\n    Parameters.wait,\n    Parameters.language,\n    Parameters.expiryTime\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  serializer\n};\nconst getResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/resumes/{identifier}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Resume\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.identifier1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/resumes/{identifier}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.identifier1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAllRedactedResumesOperationSpec: coreClient.OperationSpec = {\n  path: \"/redacted_resumes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetAllDocumentsResults\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.offset],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createRedactedResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/redacted_resumes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RedactedResume\n    },\n    201: {\n      bodyMapper: Mappers.RedactedResume\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  formDataParameters: [\n    Parameters.file,\n    Parameters.identifier,\n    Parameters.fileName,\n    Parameters.url,\n    Parameters.wait,\n    Parameters.language,\n    Parameters.expiryTime,\n    Parameters.redactHeadshot,\n    Parameters.redactPersonalDetails,\n    Parameters.redactWorkDetails,\n    Parameters.redactEducationDetails,\n    Parameters.redactReferees,\n    Parameters.redactLocations,\n    Parameters.redactDates,\n    Parameters.redactGender\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  serializer\n};\nconst getRedactedResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/redacted_resumes/{identifier}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RedactedResume\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.identifier1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteRedactedResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/redacted_resumes/{identifier}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.identifier1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAllResumeFormatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/resume_formats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1UtuacyResumeFormatsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.offset],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAllReformattedResumesOperationSpec: coreClient.OperationSpec = {\n  path: \"/reformatted_resumes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetAllDocumentsResults\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.offset],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createReformattedResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/reformatted_resumes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReformattedResume\n    },\n    201: {\n      bodyMapper: Mappers.ReformattedResume\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  formDataParameters: [\n    Parameters.file,\n    Parameters.identifier,\n    Parameters.fileName,\n    Parameters.url,\n    Parameters.wait,\n    Parameters.language,\n    Parameters.resumeFormat\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  serializer\n};\nconst getReformattedResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/reformatted_resumes/{identifier}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReformattedResume\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.identifier1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteReformattedResumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/reformatted_resumes/{identifier}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.identifier1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAllInvoicesOperationSpec: coreClient.OperationSpec = {\n  path: \"/invoices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetAllInvoicesResults\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.offset],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createInvoiceOperationSpec: coreClient.OperationSpec = {\n  path: \"/invoices\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Invoice\n    },\n    201: {\n      bodyMapper: Mappers.Invoice\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  formDataParameters: [\n    Parameters.file,\n    Parameters.identifier,\n    Parameters.fileName,\n    Parameters.url,\n    Parameters.wait,\n    Parameters.language,\n    Parameters.expiryTime\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  serializer\n};\nconst getInvoiceOperationSpec: coreClient.OperationSpec = {\n  path: \"/invoices/{identifier}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Invoice\n    },\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.identifier1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteInvoiceOperationSpec: coreClient.OperationSpec = {\n  path: \"/invoices/{identifier}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    400: {\n      bodyMapper: Mappers.RequestError\n    },\n    401: {\n      bodyMapper: Mappers.RequestError\n    },\n    404: {\n      bodyMapper: Mappers.RequestError\n    },\n    default: {\n      bodyMapper: Mappers.RequestError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.identifier1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","import {AccessToken, GetTokenOptions, TokenCredential} from \"@azure/identity\";\n\n\nexport class AffindaCredential implements TokenCredential {\n    token: string\n\n    constructor(token: string) {\n        this.token = token\n    }\n\n    getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null> {\n        return Promise.resolve({\n            token: this.token,\n            expiresOnTimestamp: 0\n        });\n    }\n}\n"],"names":["KnownEnum0","coreClient.ServiceClient","coreClient.createSerializer","Mappers.GetAllDocumentsResults","Mappers.RequestError","Parameters.limit","Parameters.offset","Parameters.$host","Parameters.accept","Mappers.Resume","Parameters.file","Parameters.identifier","Parameters.fileName","Parameters.url","Parameters.wait","Parameters.language","Parameters.expiryTime","Parameters.contentType","Parameters.accept1","Parameters.identifier1","Mappers.RedactedResume","Parameters.redactHeadshot","Parameters.redactPersonalDetails","Parameters.redactWorkDetails","Parameters.redactEducationDetails","Parameters.redactReferees","Parameters.redactLocations","Parameters.redactDates","Parameters.redactGender","Mappers.Paths1UtuacyResumeFormatsGetResponses200ContentApplicationJsonSchema","Mappers.ReformattedResume","Parameters.resumeFormat","Mappers.GetAllInvoicesResults","Mappers.Invoice"],"mappings":"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"}